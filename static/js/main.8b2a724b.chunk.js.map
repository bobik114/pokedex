{"version":3,"sources":["components/NavBar/NavBar.js","functions/capitalizeFirstLetter.js","components/Section/PokemonList/PokemonCard/PokemonCard.js","functions/getType.js","components/Section/PokemonList/PokemonList.js","components/Section/Pokemon/Pokemon.js","components/Section/Section.js","App.js","serviceWorker.js","index.js","assets/pokeball.png"],"names":["NavBar","className","href","capitalizeFirstLetter","str","length","charAt","toUpperCase","slice","PokemonCard","props","useState","pokemon","setPokemon","type","setType","useEffect","fetch","pokeUrl","then","response","json","types","imgUrl","onClick","clickPokemon","name","alt","src","sprites","front_default","pokeballImg","map","el","i","key","getType","PokemonList","pokemonsConverted","limit","setLimit","pokemons","setPokemons","allPokemons","setAllPokemons","typedSearch","setTypedSearch","selectedType","setSelectedType","pokemonsToConvert","setPokemonsToConvert","currentPage","setCurrentPage","pageCount","setPageCount","pagiOff","setPagiOff","apiUrlLimit","apiType","fetchPokemon","pokeList","results","Math","ceil","pokemonType","onSubmit","e","preventDefault","valueReg","RegExp","pokemonsFiltered","filter","test","onChange","event","target","value","placeholder","htmlFor","id","url","aria-label","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","previousLabel","nextLabel","breakLabel","pageClassName","pageLinkClassName","nextClassName","nextLinkClassName","previousClassName","previousLinkClassName","breakClassName","breakLinkClassName","containerClassName","subContainerClassName","activeClassName","Pokemon","pokeObject","classname","height","weight","base_experience","role","style","width","stats","base_stat","backgroundColor","Section","actualPokemon","setActualPokemon","pokemonSection","setPokemonSection","handleClickBack","clickBack","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.8b2a724b.chunk.js","sourcesContent":["import React from 'react'\nimport './NavBar.scss'\n\nconst NavBar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark\">\n            <a className=\"navbar-brand col-sm-3 col-md-2\" href=\"/pokedex\">Pok√©dex</a>\n        </nav>\n    )\n}\n\nexport default NavBar\n","const capitalizeFirstLetter = (str) => {\n    return str.length ? str.charAt(0).toUpperCase() + str.slice(1) : str\n}\n\nexport default capitalizeFirstLetter","import React, {useState, useEffect} from 'react'\nimport './PokemonCard.scss'\nimport capitalizeFirstLetter from '../../../../functions/capitalizeFirstLetter'\nimport pokeballImg from '../../../../assets/pokeball.png'\n\nconst PokemonCard = (props) => {\n\n    const [pokemon, setPokemon] = useState(null)\n    const [type, setType] = useState(null)\n\n    const fetchPokemon = () => {\n        fetch(`${props.pokeUrl}`)\n        .then(response => response.json())\n        .then(pokemon => setPokemon(pokemon))\n    }\n\n    useEffect(() => {\n        fetchPokemon()\n    }, [props])\n\n    useEffect(() => {\n        if(pokemon) {\n            setType([...pokemon.types])\n        }\n    }, [pokemon])\n\n    const handleClickPokemon = () => {\n        props.clickPokemon(pokemon)\n    }\n\n    function getImg(imgUrl) {\n        if(imgUrl) {\n            return imgUrl\n        }\n        else {\n            return pokeballImg\n        }\n    }\n\n    return (\n        <div className=\"col-md-6 col-xl-3 my-3\" onClick={handleClickPokemon}>\n            <div className=\"card pointer shadow\">\n                    {pokemon === null ? (\n                        <h5>Trwa ≈Çadowanie pokemona</h5>\n                    ) : (<>\n                            <div className=\"card-header\">\n                                <h5>{capitalizeFirstLetter(pokemon.name)}</h5>\n                               \n                            </div>\n                            <div className=\"card-body\">\n                                <img alt=\"#\" src={getImg(pokemon.sprites.front_default)} />\n                                <div className=\"container-type-box\">\n                                    {type === null ? (null):(type.map((el, i) => <div key={i} className={el.type.name + \" type-box\"}>{el.type.name}</div>))}\n                                </div>\n                            </div>\n                        </>\n                    )}\n            </div>\n        </div>\n    )\n}\n\nexport default PokemonCard\n","const getType = (type) => {\n    switch (type) {\n        case \"normal\":\n            return 1\n        case \"fighting\":\n            return 2\n        case \"flying\":\n            return 3\n        case \"poison\":\n            return 4\n        case \"ground\":\n            return 5\n        case \"rock\":\n            return 6\n        case \"bug\":\n            return 7\n        case \"ghost\":\n            return 8\n        case \"steel\":\n            return 9\n        case \"fire\":\n            return 10\n        case \"water\":\n            return 11\n        case \"grass\":\n            return 12\n        case \"electric\":\n            return 13\n        case \"psychic\":\n            return 14\n        case \"ice\":\n            return 15\n        case \"dragon\":\n            return 16\n        case \"dark\":\n            return 17\n        case \"fairy\":\n            return 18\n        default:\n            return 1\n    }\n}\n\nexport default getType","import React, {useState, useEffect} from 'react'\nimport PokemonCard from './PokemonCard/PokemonCard'\nimport ReactPaginate from 'react-paginate'\nimport getType from '../../../functions/getType'\nimport './PokemonList.scss'\n\nconst PokemonList = (props) => {\n\n    const types = [\"normal\", \"fighting\", \"flying\", \"poison\", \"ground\", \"rock\", \"bug\", \"ghost\", \"steel\", \"fire\", \"water\", \"grass\", \"electric\", \"psychic\", \"ice\", \"dragon\", \"dark\", \"fairy\"]\n    let pokemonsConverted = []\n\n    const [limit, setLimit] = useState(8)\n    const [pokemons, setPokemons] = useState(null)\n    const [allPokemons, setAllPokemons] = useState(null)\n    const [typedSearch, setTypedSearch] = useState(\"\")\n    const [selectedType, setSelectedType] = useState(null)\n    const [pokemonsToConvert, setPokemonsToConvert] = useState(null)\n    const [currentPage, setCurrentPage] = useState(0);\n    const [pageCount, setPageCount] = useState(0)\n    const [pagiOff, setPagiOff] = useState(false)\n\n    const apiUrl = `https://pokeapi.co/api/v2/pokemon?limit=807`\n    const apiUrlLimit = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=`\n    const apiType = `https://pokeapi.co/api/v2/type/${getType(selectedType)}`\n\n    function fetchPokemon(){\n        fetch(apiUrlLimit + (currentPage * limit))\n        .then(response => response.json())\n        .then(pokeList => {\n            setPokemons(pokeList.results)           \n            setPageCount(Math.ceil(807/limit))\n        })\n    }\n    \n    function fetchAllPokemon(){\n        fetch(apiUrl)           \n        .then(response => response.json())\n        .then(pokeList => {\n            setAllPokemons(pokeList.results)\n            setPageCount(Math.ceil(807 / limit))         \n        })\n    }\n\n    function fetchPokeType(){\n        fetch(apiType)           \n        .then(response => response.json())\n        .then(pokemonType => {\n            setPokemonsToConvert(pokemonType.pokemon)\n        })\n    }\n\n    useEffect(() => {\n        fetchAllPokemon()\n    }, []);\n      \n    useEffect(() => {\n        fetchPokemon()\n    }, [currentPage, limit]);\n\n    useEffect(() => {\n        if(pokemonsToConvert) {\n            for(const el of pokemonsToConvert) {\n                pokemonsConverted = [...pokemonsConverted, el.pokemon] \n            }\n            setPokemons(pokemonsConverted)\n        }\n    }, [pokemonsToConvert])\n\n    useEffect(() => {\n        if(selectedType) {\n            fetchPokeType(apiType)\n        }\n    }, [selectedType])\n\n    const handleChangeType = (event) => {\n        setSelectedType(event.target.value)\n        setPagiOff(true)\n    }\n\n    const handleChangeNumber = (event) => {\n        setLimit(event.target.value)\n    }\n\n    const handleType = (event) => {\n        setTypedSearch(event.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (typedSearch !== \"\") {\n            if (!pokemons) return;\n            const valueReg = new RegExp(`w*${typedSearch}w*`, 'i');\n            const pokemonsFiltered = allPokemons.filter(pokemon => {\n                return valueReg.test(pokemon.name)\n            })\n            setPokemons(pokemonsFiltered)\n            setPagiOff(true)\n        }\n        else {\n            fetchPokemon()\n            setPagiOff(false)\n        }\n    }\n\n    const setPage = (e) => {\n        setCurrentPage(e.selected)                   \n    }\n\n    return ( <>\n        <div className=\"row  my-4\">\n            <form onSubmit={handleSubmit} className=\"form-inline col-xl-4 input-group my-1\">\n                <input onChange={handleType} placeholder=\"Pokemon name\" type=\"text\" className=\"form-control\" value={typedSearch} />\n                <input type=\"submit\" className=\"btn btn-primary submit-btn\" value=\"Search\" />\n            </form>\n            \n            <form className=\"form-inline col-md-3 my-1\">\n                <label htmlFor=\"types\" className=\"type-label mr-2\">Type:</label>\n                <select onChange={handleChangeType} id=\"types\" className=\"form-control pointer\">\n                    {types.map((el, i) => <option key={i} value={el}>{el}</option>)}\n                </select>\n            </form>\n            {pagiOff ? (null):(\n                <form className=\"form-inline col-md-5 my-1\">\n                    <label htmlFor=\"pokemons-per-page\" className=\"per-page-label mr-2\">Pokemons per page:</label>\n                    <select onChange={handleChangeNumber} id=\"pokemons-per-page\" className=\"form-control pointer\">\n                        <option value={8}>8</option>\n                        <option value={16}>16</option>\n                        <option value={24}>24</option>\n                        <option value={40}>40</option>\n                        <option value={100}>100</option>\n                    </select>\n                </form>\n            )}\n        </div>\n        <div className=\"row\">\n            {pokemons === null ? (\n                <h1>Trwa ≈Çadowanie pokemon√≥w</h1>\n            ) : (\n                <>{pokemons.map((e, i)=> <PokemonCard clickPokemon={props.clickPokemon} key={i} pokeUrl={e.url} />)}</>\n            )}\n        </div>\n        <div className=\"row my-4\">\n            <nav aria-label=\"Page navigation example\" className=\"mx-auto pointer\">\n                {pagiOff ? (null):(\n                    <ReactPaginate\n                        pageCount={pageCount}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={3}\n                        onPageChange={setPage}\n                        previousLabel={\"previous\"}\n                        nextLabel={\"next\"}\n                        breakLabel={\"...\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item next-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item prev-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        containerClassName={\"pagination\"}\n                        subContainerClassName={\"pages pagination\"}\n                        activeClassName={\"page-item active\"}\n                        />\n                    )\n                }\n            </nav>\n        </div>\n    </>)\n}\n\nexport default PokemonList\n","import React, {useState, useEffect} from 'react'\nimport capitalizeFirstLetter from '../../../functions/capitalizeFirstLetter'\nimport pokeballImg from '../../../assets/pokeball.png'\n\nconst Pokemon = (props) => {\n\n    const [type, setType] = useState(null)\n\n    useEffect(() => {\n        \n        setType([...props.pokeObject.types])\n        \n    }, [])\n\n    function getImg(imgUrl) {\n        if(imgUrl) {\n            return imgUrl\n        }\n        else {\n            return pokeballImg\n        }\n    }\n\n    return <>\n        <div className=\"row\">\n            <div className=\"col-12 col-md-10 my-5 mx-auto\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h1 classname=\"m-0\">{capitalizeFirstLetter(props.pokeObject.name)}</h1>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6 mx-auto\">\n                            <img alt=\"#\" src={getImg(props.pokeObject.sprites.front_default)} />\n                        </div>\n                        <div className=\"col-12 col-md-6 mx-auto\">\n                            <div className=\"row mx-5 my-2 mt-4 justify-content-center\">\n                                <h2>Data</h2>\n                            </div>\n                            <div className=\"row mx-5 my-2\">\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">ID:</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-left\">{props.pokeObject.id}</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">Height:</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-left\">{props.pokeObject.height/10} m</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">Weight:</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-left\">{props.pokeObject.weight/10} kg</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">Experience:</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-left\">{props.pokeObject.base_experience} xp</h6>\n                                </div>\n                            </div>\n                            <div className=\"row mx-5 my-2 justify-content-center\">\n                                <h2>Stats</h2>\n                            </div>\n                            <div className=\"row mx-5 my-1\">\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">HP</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"progress\">\n                                        <div\n                                            className=\"progress-bar \"\n                                            role=\"progressbar\"\n                                            style={{\n                                            width: `${props.pokeObject.stats[5].base_stat}%`,\n                                            backgroundColor: `red`\n                                            }}>\n                                            <small>{props.pokeObject.stats[5].base_stat}</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row mx-5 my-1\">\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">Attack</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"progress\">\n                                        <div\n                                            className=\"progress-bar \"\n                                            role=\"progressbar\"\n                                            style={{\n                                            width: `${props.pokeObject.stats[4].base_stat}%`,\n                                            backgroundColor: `red`\n                                            }}>\n                                            <small>{props.pokeObject.stats[4].base_stat}</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row mx-5 my-1\">\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">Deffence</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"progress\">\n                                        <div\n                                            className=\"progress-bar \"\n                                            role=\"progressbar\"\n                                            style={{\n                                            width: `${props.pokeObject.stats[3].base_stat}%`,\n                                            backgroundColor: `red`\n                                            }}>\n                                            <small>{props.pokeObject.stats[3].base_stat}</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row mx-5 my-1\">\n                                <div className=\"col-6\">\n                                    <h6 className=\"float-right\">Speed</h6>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"progress\">\n                                        <div\n                                            className=\"progress-bar \"\n                                            role=\"progressbar\"\n                                            style={{\n                                            width: `${props.pokeObject.stats[0].base_stat}%`,\n                                            backgroundColor: `red`\n                                            }}>\n                                            <small>{props.pokeObject.stats[0].base_stat}</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row d-flex justify-content-center mt-4\">\n                                <div className=\"container-type-box\">\n                                    {type === null ? (null):(type.map((el, i) => <div className={el.type.name + \" type-box\"}>{el.type.name}</div>))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Pokemon","import React, {useState} from 'react'\nimport PokemonList from './PokemonList/PokemonList'\nimport Pokemon from './Pokemon/Pokemon'\n\nconst Section = () => {\n\n    const [actualPokemon, setActualPokemon] = useState(null)\n    const [pokemonSection, setPokemonSection] = useState(false)\n\n    const clickPokemon = (pokemon) => {\n        setActualPokemon(pokemon)\n        setPokemonSection(true)\n    }\n    const handleClickBack = () => {\n        setPokemonSection(false)\n    }\n\n    return (\n        <>{pokemonSection ? ( \n            <>\n                <Pokemon pokeObject={actualPokemon} clickBack={handleClickBack}/>\n                <button className=\"btn btn-primary\" onClick={handleClickBack}>Go Back to Pokemon List</button>\n            </>\n            ) : (\n            <PokemonList clickPokemon={clickPokemon}/>\n            )}\n        </>\n    )\n}\n\nexport default Section\n","import React from 'react'\nimport NavBar from './components/NavBar/NavBar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './scss/main.scss'\nimport Section from './components/Section/Section.js'\n\nfunction App() {\n  return ( <>\n      <NavBar />\n      <div className=\"container\">\n        <Section />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pokeball.8e1cb718.png\";"],"sourceRoot":""}